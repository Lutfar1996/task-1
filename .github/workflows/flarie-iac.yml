name: Terraform CI/CD

on:
  push:
    branches:
      - flarie-iac  # This will run the workflow on every push to the main branch
  pull_request:
    branches:
      - main  # This will also run the workflow when a PR is created

jobs:
  terraform:
    runs-on: ubuntu-latest  # Run the job on an Ubuntu runner

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7  # Specify your required Terraform version

      # Set up DigitalOcean API Token as secret
      - name: Set up DigitalOcean API token
        run: echo "DO_API_TOKEN=${{ secrets.DOS_API_TOKEN }}" >> $GITHUB_ENV

      # Set up DigitalOcean Spaces keys
      - name: Set up DigitalOcean Spaces keys
        run: |
          echo "DOS_ACCESS_KEY=${{ secrets.DOS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "DOS_SECRET_KEY=${{ secrets.DOS_SECRET_KEY }}" >> $GITHUB_ENV

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Run Terraform Plan to check changes
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Terraform Apply: Apply the changes (using tfplan file)
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # Optionally, run destroy after some delay or after another condition is met
      # This can be triggered manually or after testing is done
      - name: Terraform Destroy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Trigger destroy if it's a direct push to main
        run: terraform destroy -auto-approve
